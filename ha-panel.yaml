substitutions:
  lightbulb: "\U000F1802"
  boiler_on: "\U000F0238"
  boiler_off: "\U000F1722"
  radiator: "\U000F0438"
  ceiling_light: "\U000F0769"
  house_temp: "\U000F0F55"
  #weather icons
  cloudy: "\U000F0590"
  cloudyalert: "\U000F0F2F"
  cloudyarrowright: "\U000F0E6E"
  fog: "\U000F0591"
  hail: "\U000F0592"
  hazy: "\U000F0F30"
  hurricane: "\U000F0898"
  lightning: "\U000F0593"
  lightningrainy: "\U000F067E"
  night: "\U000F0594"
  nightpartlycloudy: "\U000F0F31"
  partlycloudy: "\U000F0595"
  partlylightning: "\U000F0F32"
  partlyrainy: "\U000F0F33"
  partlysnowy: "\U000F0F34"
  partlysnowyrainy: "\U000F0F35"
  pouring: "\U000F0596"
  rainy: "\U000F0597"
  snowy: "\U000F0598"
  snowyheavy: "\U000F0F36"
  snowyrainy: "\U000F067F"
  sunny: "\U000F0599"
  sunnyalert: "\U000F0F37"
  sunnyoff: "\U000F14E4"
  sunset: "\U000F059A"
  sunsetdown: "\U000F059B"
  sunsetup: "\U000F059C"
  tornado: "\U000F0F38"
  windy: "\U000F059D"
  windyvariant: "\U000F059E"
  happyface: "\U000F01F5"

esphome:
  name: ha-panel-1
  friendly_name: HA panel 1
  platformio_options:
    board_build.flash_mode: dio
  on_boot:
    - delay: 5s
    - lvgl.widget.hide: boot_screen
    - delay: 30s
    - script.execute: screen_light

esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  flash_size: 16MB
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: "y"
      CONFIG_ESP32S3_DATA_CACHE_64KB: "y"
      CONFIG_ESP32S3_DATA_CACHE_LINE_64B: "y"
      CONFIG_SPIRAM_FETCH_INSTRUCTIONS: y
      CONFIG_SPIRAM_RODATA: y

psram:
  mode: octal
  speed: 80MHz

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "XXX-replace-XXX"
  on_client_connected:
    - if:
        condition:
          lambda: 'return (0 == client_info.find("Home Assistant "));'
        then:
          - lvgl.widget.show: lbl_hastatus
  on_client_disconnected:
    - if:
        condition:
          lambda: 'return (0 == client_info.find("Home Assistant "));'
        then:
          - lvgl.widget.hide: lbl_hastatus

ota:
  - platform: esphome
    password: "XXX-replace-XXX"

wifi:
  networks:
  - ssid: !secret wifi_ssid_backup
    password: !secret wifi_password_backup
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
  #use_address: 192.168.9.75

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Ha-Panel-1 Fallback Hotspot"
    password: !secret wifi_password

captive_portal:

external_components:
 - source: github://clydebarrow/esphome@lvgl
   refresh: 10min
   components: [ lvgl ]

#-----------------------------------------------------------------------------------------------------------
# Content
#------------------------------------------- 
lvgl:

  displays:
    - my_display
  touchscreens:
    - my_touchscreen
#-------------------------------------------
  theme:
    #label:
     # text_font: roboto24 # set all your labels to use your custom defined font
    button:
      bg_color: 0x333333
      #bg_grad_color: 0x333333
      #bg_grad_dir: VER
      bg_opa: 85%
      border_color: 0x333333
      border_width: 0
      text_color: 0xFFFFFF
      pressed: # set some btn colors to be different in pressed state
        bg_color: 0x111111
        bg_grad_color: 0x111111
      checked: # set some btn colors to be different in checked state
        bg_color: 0x111111
        bg_grad_color: 0x111111
        text_color: 0xf6ff00
    buttonmatrix:
      bg_opa: TRANSP
      border_color: 0x333333
      border_width: 0
      text_color: 0xFFFFFF
      pad_all: 0
      items: # set all your btnmatrix buttons to use your custom defined styles and font
        bg_color: 0x333333
        bg_grad_color: 0x333333
        bg_grad_dir: VER
        bg_opa: COVER
        border_color: 0x333333
        border_width: 1
        text_color: 0xFFFFFF
        #text_font: roboto10
        pressed:
          bg_color: 0x111111
          bg_grad_color: 0x111111
        checked:
          bg_color: 0x111111
          bg_grad_color: 0x111111
          text_color: 0xEEEEEE
    switch:
      bg_color: 0xC0C0C0
      bg_grad_color: 0xb0b0b0
      bg_grad_dir: VER
      bg_opa: COVER
      checked:
        bg_color: 0x1d5f96
        bg_grad_color: 0x03324A
        bg_grad_dir: VER
        bg_opa: COVER
      knob:
        bg_color: 0xFFFFFF
        bg_grad_color: 0xC0C0C0
        bg_grad_dir: VER
        bg_opa: COVER
    slider:
      border_width: 1
      border_opa: 30%
      bg_color: 0x9c9c9c
      bg_opa: 15%
      indicator:
        bg_color: 0x333333
        bg_grad_color: 0x333333
        bg_opa: COVER
      knob:
        bg_color: 0x444444
        bg_grad_color: 0x444444
        bg_opa: COVER
        border_color: 0x444444
        border_width: 1
        text_color: 0xFFFFFF
#-------------------------------------------
  style_definitions:
    - id: header_footer
      bg_color: 0x444444
      bg_grad_color: 0x444444
      bg_grad_dir: VER
      bg_opa: COVER
      border_width: 0
      radius: 0
      pad_all: 0
      pad_row: 0
      pad_column: 0
      border_color: 0x333333
      text_color: 0xFFFFFF
      width: 100%
      height: 40
#-------------------------------------------
  top_layer:
    widgets:
      - label:
          text: "\uF1EB"
          id: lbl_hastatus
          hidden: true
          align: top_right
          x: -2
          y: 2
          text_align: right
          text_color: 0xFFFFFF
      - buttonmatrix:
          align: bottom_mid
          styles: header_footer
          pad_all: 0
          outline_width: 0
          id: top_layer
          items:
            styles: header_footer
          rows:
            - buttons:
              - id: page_prev
                text: "\uF053"
                on_press:
                  then:
                    lvgl.page.previous:
              - id: page_home
                text: "\uF015"
                on_press:
                  then:
                    lvgl.page.show: clock_page
              - id: page_next
                text: "\uF054"
                on_press:
                  then:
                    lvgl.page.next:
      - obj:
          id: boot_screen
          x: 0
          y: 0
          width: 100%
          height: 100%
          bg_color: 0x000000
          bg_opa: COVER
          radius: 0
          pad_all: 0
          border_width: 0
          widgets:
            - image:
                align: CENTER
                src: boot_logo
                y: -40
            - spinner:
                align: CENTER
                y: 95
                height: 50
                width: 50
                spin_time: 1s
                arc_length: 60deg
                arc_width: 8
                indicator:
                  arc_color: 0x18bcf2
                  arc_width: 8
          on_press:
            - lvgl.widget.hide: boot_screen

  page_wrap: true
  pages:  
    - id: clock_page
      widgets:
        - image:
            align: CENTER
            src: back7
        - label:
            align: CENTER
            id: display_weather_icon
            text: $happyface
            text_color: 0xFFFFFF
            bg_opa: TRANSP
            text_font: weather_icons
            y: -160
            x: -75
        - label:
            align: CENTER
            id: display_date
            text: date
            text_font: roboto40
            text_color: 0xFFFFFF
            y: -80
            x: -75
        - label:
            align: CENTER
            id: display_time
            text: clock
            text_font: roboto90
            text_color: 0xFFFFFF
            y: -15
            x: -75
        - label:
            align: CENTER
            id: display_weather
            text: weather
            text_font: roboto24
            text_color: 0xFFFFFF
            y: 70
            x: -75
        - label:
            align: CENTER
            id: display_temp
            text: temp
            text_font: roboto24
            text_color: 0xFFFFFF
            y: 115
            x: -75
        - label:
            align: CENTER
            id: display_house_temp
            text: house temp
            text_font: roboto24
            text_color: 0xFFFFFF
            y: 150
            x: -75
        - obj: # a properly placed coontainer object for all these controls
            align: CENTER
            width: 150
            height: 480
            bg_opa: 30%
            border_opa: TRANSP
            pad_all: 5
            x: 164
            y: 0
            widgets:
              - slider:
                  id: living_room_dimmer
                  width: 30
                  height: 220
                  x: 55
                  y: 60
                  min_value: 30
                  max_value: 160
                  value: 160
                  on_release:
                    - number.set:
                        id: dimmer_val
                        value: !lambda "return int(x);"

              - button:
                  id: living_room_light_l1_btn
                  align: CENTER
                  width: 80
                  height: 80
                  #x: 0
                  y: 120
                  checkable: true
                  widgets:
                    - label:
                        text_font: btn_icons_font2
                        text: $lightbulb
                        align: CENTER
                  on_click:
                    - homeassistant.service:
                        service: light.toggle
                        data_template:
                          entity_id: light.living_room_light_l1
                          brightness: !lambda "return id(dimmer_level);"

    - id: heating_page
      widgets:
        - image:
            align: CENTER
            src: back6
        - obj: # a properly placed coontainer object for all these controls
            layout: # enable the GRID layout for the children widgets
              type: GRID # split the rows and the columns proportionally
              grid_columns: [FR(1), FR(1), FR(1)] # equal
              grid_rows: [FR(50), FR(50)] # like percents
            width: 100%
            height: 90%
            #align: CENTER
            pad_all: 15
            pad_top: 22
            #pad_row: 6
            #pad_column: 2
            bg_opa: TRANSP
            border_opa: TRANSP
            widgets:
              - button:
                  id: boiler_heating_btn
                  checkable: true
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 0 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  widgets:
                    - label:
                        text_font: btn_icons_font
                        text: $boiler_on
                        align: CENTER
                        y: -20
                    - label:
                        text: "Boiler"
                        long_mode: dot
                        align: CENTER
                        y: 30
                  on_click:
                    - homeassistant.service:
                        service: automation.trigger
                        data: 
                          entity_id: !lambda "return id(aut_boiler);"
                    
              - obj:
                  id: info_btn
                  #checkable: false
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 1 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  bg_color: 0x333333
                  bg_opa: 85%
                  border_color: 0x333333
                  border_width: 0
                  text_color: 0xFFFFFF
                  widgets:
                    - button:
                        align: CENTER
                        width: 110
                        height: 35
                        #x: 0
                        y: -60
                        checkable: false
                        widgets:
                          - label:
                              text_font: roboto24
                              text: "+"
                              align: CENTER
                        on_click:
                          - homeassistant.service:
                              service: input_number.increment
                              data: 
                                entity_id: input_number.house_temperature_setpoint
                    
                    - label:
                        text_font: btn_icons_font2
                        text: $house_temp
                        align: CENTER
                        y: -5
                    - label:
                        id: house_setpoint_display
                        text_font: roboto24
                        text: "--- °C"
                        align: CENTER
                        y: 25
                        
                    - button:
                        align: CENTER
                        width: 110
                        height: 35
                        #x: 0
                        y: 60
                        checkable: false
                        widgets:
                          - label:
                              text_font: roboto24
                              text: "-"
                              align: CENTER
                        on_click:
                          - homeassistant.service:
                              service: input_number.decrement
                              data: 
                                entity_id: input_number.house_temperature_setpoint
            
              - button:
                  id: bedroom_heating_btn
                  checkable: true
                  grid_cell_column_pos: 1 # place the widget in
                  grid_cell_row_pos: 0 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  widgets:
                    - label:
                        text_font: btn_icons_font
                        text: $radiator
                        align: CENTER
                        y: -20
                    - label:
                        text: "Bedroom"
                        long_mode: dot
                        align: CENTER
                        y: 30
                  on_click:
                    - homeassistant.service:
                        service: automation.trigger
                        data: 
                          entity_id: !lambda "return id(aut_bedroom);"
                          
              - button:
                  id: living_room_heating_btn
                  checkable: true
                  grid_cell_column_pos: 1 # place the widget in
                  grid_cell_row_pos: 1 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  widgets:
                    - label:
                        text_font: btn_icons_font
                        text: $radiator
                        align: CENTER
                        y: -20
                    - label:
                        text: "Living room"
                        long_mode: dot
                        align: CENTER
                        y: 30
                  on_click:
                    - homeassistant.service:
                        service: automation.trigger
                        data: 
                          entity_id: !lambda "return id(aut_living_room);"
              - button:
                  id: office_heating_btn
                  checkable: true
                  grid_cell_column_pos: 2 # place the widget in
                  grid_cell_row_pos: 0 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  widgets:
                    - label:
                        text_font: btn_icons_font
                        text: $radiator
                        align: CENTER
                        y: -20
                    - label:
                        text: "Office"
                        long_mode: dot
                        align: CENTER
                        y: 30
                  on_click:
                    - homeassistant.service:
                        service: automation.trigger
                        data: 
                          entity_id: !lambda "return id(aut_office);"
              - button:
                  id: kids_heating_btn
                  checkable: true
                  grid_cell_column_pos: 2 # place the widget in
                  grid_cell_row_pos: 1 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  widgets:
                    - label:
                        text_font: btn_icons_font
                        text: $radiator
                        align: CENTER
                        y: -20
                    - label:
                        text: "Kids"
                        long_mode: dot
                        align: CENTER
                        y: 30
                  on_click:
                    - homeassistant.service:
                        service: automation.trigger
                        data: 
                          entity_id: !lambda "return id(aut_kids);"
                  
#--------------------- Sensors -------------------
globals:
  - id: dimmer_level
    type: int
    restore_value: no

  - id: aut_boiler
    type: std::string
  
  - id: aut_bedroom
    type: std::string
  
  - id: aut_living_room
    type: std::string
  
  - id: aut_office
    type: std::string
  
  - id: aut_kids
    type: std::string

number:
  - platform: template
    id: dimmer_val
    name: "dimmer val"
    min_value: 0
    max_value: 255
    step: 1
    initial_value: 160
    optimistic: True
    internal: True
    on_value:
      then:
        - globals.set:
            id: dimmer_level
            value: !lambda 'return int(x);'
        - if:
            condition:
              lambda: 'return id(living_room_light_l1).state == true;'
            then:
              - homeassistant.service:
                  service: light.turn_on
                  data_template:
                    entity_id: light.living_room_light_l1
                    brightness: !lambda "return x;"
  
sensor:
  - platform: uptime
    id: uptime_internal

  - platform: homeassistant
    id: house_setpoint_ha
    entity_id: input_number.house_temperature_setpoint
    on_value:
      - logger.log: id(house_setpoint_ha).state.c_str()
      - lvgl.label.update:
          id: house_setpoint_display
          text: 
            format: "%.1f °C"
            args: ["id(house_setpoint_ha).state"]
      
  - platform: homeassistant
    id: house_temp_sensor
    entity_id: sensor.house_average_temperature
    on_value:
      then:
         - lvgl.label.update:
            id: display_house_temp
            text: 
              format: "$house_temp %.1f °C"
              args: ["id(house_temp_sensor).state"]

text_sensor:
  - platform: homeassistant
    id: ha_time
    entity_id: sensor.time
    on_value:
      then:
        - lvgl.label.update:
            id: display_time
            text: !lambda return id(ha_time).state.c_str();
  
  - platform: homeassistant
    id: ha_date
    entity_id: sensor.date
    on_value:
      then:
        - lvgl.label.update:
            id: display_date
            text: !lambda |-
              std::string date_str = id(ha_date).state.c_str();
              std::string year = date_str.substr(0, 4);
              std::string month = date_str.substr(5, 2);
              std::string day = date_str.substr(8, 2);
              return (day + "/" + month + "/" + year).c_str();
  
  - platform: homeassistant
    id: ha_weather_cond
    entity_id: weather.forecast_home
    filters:
      - to_upper
    on_value:
      then:
        - lvgl.label.update:
            id: display_weather
            text: !lambda return id(ha_weather_cond).state.c_str();
        #- text_sensor.template.publish:
        #    id: weather_condition_icon
        #    state: !lambda return id(ha_weather_cond).state.c_str();

  - platform: template
    id: weather_condition_icon
    lambda: |-
      std::string state = id(ha_weather_cond).state.c_str();
      if (state == "RAINY") { return std::string("$rainy"); }
      else if (state == "CLOUDY") { return std::string("$cloudy"); }
      else if (state == "PARTLYCLOUDY") { return std::string("$partlycloudy"); }
      else if (state == "SUNNY") { return std::string("$sunny"); }
      else if (state == "FOG") { return std::string("$fog"); }
      else if (state == "HAIL") { return std::string("$hail"); }
      else if (state == "HAZY") { return std::string("$hazy"); }
      else if (state == "LIGHTNING") { return std::string("$lightning"); }
      else if (state == "LIGHTNINGRAINY") { return std::string("$lightningrainy"); }
      else if (state == "NIGHT") { return std::string("$night"); }
      else if (state == "NIGHTPARTLYCLOUDY") { return std::string("$nightpartlycloudy"); }
      else if (state == "PARTLYRAINY") { return std::string("$partlyrainy"); }
      else if (state == "PARTLYLIGHTNING") { return std::string("$partlylightning"); }
      else if (state == "PARTLYSNOWY") { return std::string("$partlysnowy"); }
      else if (state == "PARTLYSNOWYRAINY") { return std::string("$partlysnowyrainy"); }
      else if (state == "POURING") { return std::string("$pouring"); }
      else if (state == "SNOWY") { return std::string("$snowy"); }
      else if (state == "SNOWYHEAVY") { return std::string("$snowyheavy"); }
      else if (state == "SUNSET") { return std::string("$sunset"); }
      else if (state == "TORNADO") { return std::string("$tornado"); }
      else if (state == "WINDY") { return std::string("$windy"); }
      else if (state == "HURRICANE") { return std::string("$hurricane"); }
      return std::string("$happyface");
    on_value:
      then:
        - logger.log: id(weather_condition_icon).state.c_str()
        - lvgl.label.update:
            id: display_weather_icon
            text: !lambda return id(weather_condition_icon).state.c_str();
  
  - platform: homeassistant
    id: ha_weather_temp
    entity_id: weather.forecast_home
    attribute: temperature
    on_value:
      then:
        - lvgl.label.update:
            id: display_temp
            text: 
              format: "\U000F050F %s °C"
              args: ["id(ha_weather_temp).state.c_str()"]
  
  - platform: template
    name: Uptime
    lambda: |-
      int seconds = (id(uptime_internal).state);
      int days = seconds / (24 * 3600);
      seconds = seconds % (24 * 3600); 
      int hours = seconds / 3600;
      seconds = seconds % 3600;
      int minutes = seconds /  60;
      seconds = seconds % 60;
      return { ( std::to_string(days) + "d " + std::to_string(hours) + "h " + std::to_string(minutes) + "m " + std::to_string(seconds) + "s").c_str() };
    icon: mdi:clock-start
    update_interval: 60s
 
binary_sensor:
  - platform: homeassistant
    id: living_room_light_l1
    entity_id: light.living_room_light_l1
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: living_room_light_l1_btn
            state:
              checked: !lambda "return x;"
  
  - platform: homeassistant
    id: aut_boiler_sensor
    entity_id: automation.e_boiler_off_if_all_trvs_off
    publish_initial_state: true
    internal: true
    on_state:
      then:
        - lvgl.widget.update:
            id: boiler_heating_btn
            state:
              checked: !lambda return x;
        - if:
            condition:
              lambda: 'return id(aut_boiler_sensor).state == true;'
            then:
              - globals.set:
                  id: aut_boiler
                  value: '"automation.5_boiler_off"'
            else: 
              - globals.set:
                  id: aut_boiler
                  value: '"automation.5_boiler_on"'

  - platform: homeassistant
    id: aut_bedroom_sensor
    entity_id: automation.b_bedroom_trv_off_17o
    publish_initial_state: true
    internal: true
    on_state:
      then:
        - lvgl.widget.update:
            id: bedroom_heating_btn
            state:
              checked: !lambda return x;
        - if:
            condition:
              lambda: 'return id(aut_bedroom_sensor).state == true;'
            then:
              - globals.set:
                  id: aut_bedroom
                  value: '"automation.2_bedroom_heating_off"'
            else: 
              - globals.set:
                  id: aut_bedroom
                  value: '"automation.2_bedroom_heating_on"'   

  - platform: homeassistant
    id: aut_living_room_sensor
    entity_id: automation.d_living_room_trv_off_17o
    publish_initial_state: true
    internal: true
    on_state:
      then:
        - lvgl.widget.update:
            id: living_room_heating_btn
            state:
              checked: !lambda return x;
        - if:
            condition:
              lambda: 'return id(aut_living_room_sensor).state == true;'
            then:
              - globals.set:
                  id: aut_living_room
                  value: '"automation.4_living_room_heating_off"'
            else: 
              - globals.set:
                  id: aut_living_room
                  value: '"automation.4_living_room_heating_on"'

  - platform: homeassistant
    id: aut_office_sensor
    entity_id: automation.1_office_trv_off_17o
    publish_initial_state: true
    internal: true
    on_state:
      then:
        - lvgl.widget.update:
            id: office_heating_btn
            state:
              checked: !lambda return x;
        - if:
            condition:
              lambda: 'return id(aut_office_sensor).state == true;'
            then:
              - globals.set:
                  id: aut_office
                  value: '"automation.1_office_heating_off"'
            else: 
              - globals.set:
                  id: aut_office
                  value: '"automation.1_office_heating_on"' 

  - platform: homeassistant
    id: aut_kids_sensor
    entity_id: automation.c_kids_trv_off_17o
    publish_initial_state: true
    internal: true
    on_state:
      then:
        - lvgl.widget.update:
            id: kids_heating_btn
            state:
              checked: !lambda return x;
        - if:
            condition:
              lambda: 'return id(aut_kids_sensor).state == true;'
            then:
              - globals.set:
                  id: aut_kids
                  value: '"automation.3_kids_heating_off"'
            else: 
              - globals.set:
                  id: aut_kids
                  value: '"automation.3_kids_heating_on"'    
    
#-------------------------------------------
# Internal outputs
#-------------------------------------------
output:   
  # Backlight LED
  - platform: ledc
    pin: GPIO38
    id: GPIO38
    frequency: 100Hz

  # Built in 240v relay
  - platform: gpio
    pin: 40
    id: panel_output
#-------------------------------------------
# LIGHTS
#-------------------------------------------
light:
  - platform: monochromatic
    output: GPIO38
    name: Backlight
    id: backlight
    restore_mode: ALWAYS_ON
  
  - platform: binary
    name: "Panel Switch"
    id: panel_switch
    output: panel_output
    
#-------------------------------------------
# Graphicsd and Fonts
#-------------------------------------------
image:
  #- file: 'images/back1.png'
  #  id: back1
  #  type: RGB565
  
  - file: 'images/back2.png'
    id: back2
    type: RGB565
  
  #- file: 'images/back3.png'
  #  id: back3
  #  type: RGB565
  
  #- file: 'images/back4.png'
  #  id: back4
  #  type: RGB565
  
  #- file: 'images/back5.png'
  #  id: back5
  #  type: RGB565
  
  - file: 'images/back6.png'
    id: back6
    type: RGB565
  
  - file: 'images/back7.png'
    id: back7
    type: RGB565
  
  - file: 'images/ha_logo.png'
    id: boot_logo
    resize: 200x200
    type: RGB565
    use_transparency: true
    
font:
  - file: "gfonts://Roboto"
    id: roboto24
    size: 24
    bpp: 4
    extras:
      - file: 'fonts/materialdesignicons-webfont.ttf' # http://materialdesignicons.com/cdn/7.4.47/ 
        glyphs: [
          "\U000F004B",
          "\U0000f0ed",
          "\U000F006E",
          "\U000F012C",
          "\U000F179B",
          "\U000F0748",
          "\U000F1A1B",
          "\U000F02DC",
          "\U000F0A02",
          "\U000F035F",
          "\U000F0156",
          "\U000F0C5F", 
          "\U000f0084",
          "\U000f0091",
          "\U000F050F", # Thermometer
          $house_temp 
          ]
  - file: "gfonts://Roboto"
    id: weather_icons
    size: 110
    bpp: 4
    extras:
      - file: 'fonts/materialdesignicons-webfont.ttf' # http://materialdesignicons.com/cdn/7.4.47/ 
        glyphs: [
          $cloudy,
          $cloudyalert,
          $cloudyarrowright,
          $fog,
          $hail,
          $hazy,
          $hurricane,
          $lightning,
          $lightningrainy,
          $night,
          $nightpartlycloudy,
          $partlycloudy,
          $partlylightning,
          $partlyrainy,
          $partlysnowy,
          $partlysnowyrainy,
          $pouring,
          $rainy,
          $snowy,
          $snowyheavy,
          $snowyrainy,
          $sunny,
          $sunnyalert,
          $sunnyoff,
          $sunset,
          $sunsetdown,
          $sunsetup,
          $tornado,
          $windy,
          $windyvariant,
          $happyface
        ]

  - file: 'fonts/materialdesignicons-webfont.ttf' # http://materialdesignicons.com/cdn/7.4.47/ 
    id: light32
    size: 32
    bpp: 4
    glyphs: [
      "\U000F0335", # mdi-lightbulb
      "\U000F0769", # mdi-ceiling-light
      "\U000F08DD", # mdi-floor-lamp
      "\U000F12BA", # mdi-string-lights
      ]          
      
  - file: "gfonts://Roboto"
    id: roboto40
    size: 40
    bpp: 4
  
  - file: "gfonts://Roboto"
    id: btn_icons_font
    size: 70
    bpp: 4
    extras:
      - file: 'fonts/materialdesignicons-webfont.ttf' # http://materialdesignicons.com/cdn/7.4.47/ 
        glyphs: [
          $lightbulb,
          $boiler_on,
          $boiler_off,
          $radiator,
          $ceiling_light,
          $house_temp
        ]
    
  - file: "gfonts://Roboto"
    id: btn_icons_font2
    size: 50
    bpp: 4
    extras:
      - file: 'fonts/materialdesignicons-webfont.ttf' # http://materialdesignicons.com/cdn/7.4.47/ 
        glyphs: [
          $lightbulb,
          $house_temp
        ]

  - file: "gfonts://Roboto"
    id: roboto90
    size: 90
    bpp: 4          

#-------------------------------------------
# Touchscreen gt911 i2c
#-------------------------------------------
i2c:
  - id: bus_a
    sda: GPIO19
    scl: GPIO45
    #frequency: 100kHz
    
touchscreen:
  platform: gt911
  transform:
    mirror_x: false
    mirror_y: false
  id: my_touchscreen
  display: my_display

  on_touch:
    - logger.log:
          format: Touch at (%d, %d)
          args: [touch.x, touch.y]
    - lambda: |-
          ESP_LOGI("cal", "x=%d, y=%d, x_raw=%d, y_raw=%0d",
              touch.x,
              touch.y,
              touch.x_raw,
              touch.y_raw
              );
    - script.stop: screen_light
    - script.execute: screen_light

script:
  - id: screen_light
    mode: restart
    then:
      - lvgl.resume:
      - light.turn_on:
          id: backlight
          brightness: 100%          
          transition_length: 1s
      - delay: 30s
      - light.turn_on:
            id: backlight
            brightness: 50%
            transition_length: 2s
      - delay: 15min
      - light.turn_on:
            id: backlight
            brightness: 35%
            transition_length: 5s
      - delay: 15min
      - light.turn_off:
            id: backlight
      - lvgl.pause:
          show_snow: true

#-------------------------------------------
# Display st7701s spi
#-------------------------------------------
spi:
  - id: lcd_spi
    clk_pin: GPIO48
    mosi_pin: GPIO47
    
display:
  - platform: st7701s
    id: my_display
    update_interval: never
    auto_clear_enabled: True
    data_rate: 2MHz
    spi_mode: MODE3
    color_order: RGB
    invert_colors: false
    dimensions:
      width: 480
      height: 480
    transform:
      mirror_x: false
      mirror_y: false
    cs_pin: 39
      # reset not defined 
    de_pin: 18
    hsync_pin: 16
    vsync_pin: 17
    pclk_pin: 21
    init_sequence: 
      - 1
      - [0xFF, 0x77, 0x01, 0x00, 0x00, 0x10] # CMD2_BKSEL_BK0
      - [0xCD, 0x00] # disable MDT flag
    pclk_frequency: 12MHz
    pclk_inverted: false
    data_pins:
      red:
        - 11         # R1
        - 12         # R2
        - 13         # R3
        - 14         # R4
        - 0          # R5
      green:
        - 8          # G0
        - 20         # G1
        - 3          # G2
        - 46         # G3
        - 9          # G4
        - 10         # G5 
      blue:
        - 4          # B1
        - 5          # B2
        - 6          # B3
        - 7          # B4
        - 15         # B5
    